#+INCLUDE: "../../../common/header.org"
#+TITLE:  Servidores web y servidores de aplicaciones
#+SUBTITLE: 
#+KEYWORDS: 
#+OPTIONS: reveal_single_file:nil

* Introducción

- Una aplicación es una solución /software/ para un problema
- Este /software/ se ejecuta en un entorno que incluye
  - Otro /software/ del que depende
  - /Hardware/
  - Conexiones de red
  - Otros servicios en ejecución

* Aplicaciones web VS. escritorio
- Una aplicación de escritorio
  - Se lanza por el sistema operativo
  - Interactúa directamente con el resto del /software/ y /hardware/ del ordenador
  - Por tanto, suele ejecutarse en /workstations/
- Una aplicación web
  - Se ejecuta dentro de un navegador web
  - Interacción limitada con el resto del /software/ y /hardware/ del ordenador
  - Se ejecuta en un servidor web. Se ejecuta parcialmente en el navegador.  


Pregunta: ¿es Firefox una aplicación web o de escritorio?
Pregunta: ¿[[https://www.rollapp.com/][rollup]] es web o escritorio?

* Arquitectura cliente-servidor
- La parte cliente permite al usuario interaccionar con la aplicación
- Parte de la lógica puede estar en el cliente, y parte en el servidor
- Los datos se almacenan en el servidor    
  

[[file:media/cliente-servidor.png]]
Fuente: [[https://es.wikipedia.org/wiki/Cliente-servidor][Wikipedia]]

* Arquitectura de tres niveles
- El servidor se convierte en un servidor de negocio
  - Lógica de validación, usuarios, accesos, diferentes /pantallas/
- La base de datos es un servidor aparte    

[[file:media/tres-capas.png]]
Fuente: [[https://es.wikipedia.org/wiki/Arquitectura_multicapa][Wikipedia]]

** Arquitectura multicapa
- El negocio y la base de datos pueden a su vez dividirse en capas
- Las capas pueden estar en
  - Diferentes servidores físicos
  - Diferentes procesos en un servidor     
  - Diferentes partes del código de la misma aplicación

    
* Requisitos de la aplicación web

** Del equipo servidor:
- procesador
- memoria
- almacenamiento
- tolerancia a fallos
- conexiones de red   
  
** Del sistema operativo anfitrión
- sistema de ficheros
- versiones
- componentes opcionales  
    
** De la propia aplicación
- tiempos de respuesta
- [[https://en.wikipedia.org/wiki/C10k_problem][conexiones concurrentes]]
- niveles de acceso
- funcionalidad

* Servidores web
- Servidores web "puros"
  - [[https://httpd.apache.org/][Apache]], [[https://nginx.org/en/][nginx]]...
  - Sirven documentos con el protocolo HTTP/HTTPS
  - Los documentos son ficheros en disco  
- Servidores de aplicaciones
  - [[https://www.iis.net/][IIS]], [[https://tomcat.apache.org/][Tomcat]], [[https://www.oracle.com/es/java/weblogic/][Weblogic]]
  - Incluyen facilidades para generar el documento a devolver: [[https://learn.microsoft.com/en-us/iis/application-frameworks/scenario-build-an-aspnet-website-on-iis/configure-an-asp-net-website-on-iis][ASP]], [[https://www.codejava.net/servers/tomcat/how-to-deploy-a-java-web-application-on-tomcat][JSP]]...

- Los servidores web "puros" pueden incluir /plugins/ para poder generar documentos con lenguajes de /script/

** Servidor de aplicaciones
- Los componentes de un servidor de aplicaciones son
  - Servidor web 
  - Módulo de ejecución de /scripts/
  - Servidor de base de datos
  - Opcionales: /caché/, balanceador de carga, /firewall/      

* LAMP
- [[https://es.wikipedia.org/wiki/LAMP][Linux, Apache, MySQL (o MariaDB), PHP]]
- Es un estándar /de facto/ para aplicaciones web
  - Libre
  - Gratis
  - Muy probado
  - Rendimiento aceptable para proyectos pequeños y medianos      
[[file:media/lamp.png]]
Fuente: [[https://es.wikipedia.org/wiki/LAMP][Wikipedia]]
  
* Instalación LAMP
# https://josejuansanchez.org/iaw/practica-01-01-teoria/index.html#instalaci%C3%B3n-de-m%C3%B3dulos-php

** Linux
- Impartido en otros módulos
- Usaremos Debian  
** Apache
#+begin_src sh
sudo apt install apache2 -y
#+end_src

Tras instalar
#+begin_src sh
sudo systemctl start apache2
sudo systemctl stop apache2
sudo systemctl restart apache2
sudo systemctl reload apache2
sudo systemctl status apache2
#+end_src

*** Configuración de Apache
- Directorio =/etc/apache2/=
- =apache2.conf=: Es el archivo de configuración principal. En este archivo se incluyen todos los archivos de configuración adicionales.
- =envvars=: Este archivo se definen las variables de entorno que hacen referencia al servidor web Apache y se utilizan en el archivo =apache2.conf=.
- =magic=: Este archivo contiene instrucciones para determinar el tipo de contenido o tipo MIME (MUltipurpose Internet Mail Extensions) de un archivo en función de los primeros bytes de un archivo. Los navegadores a menudo usan el tipo MIME (y no la extensión de archivo) para determinar cómo procesará un documento; por lo tanto, es importante que los servidores estén configurados correctamente para adjuntar el tipo MIME correcto al encabezado del objeto de respuesta. Puede encontrar más información sobre los tipo MIME aquí.
- =ports.conf=: En este archivo se definen los puertos TCP donde el servidor Apache estará escuchando peticiones.
#+reveal: split
- =conf-available=: Este directorio contiene archivos de configuración que se aplican a todos los hosts virtuales de forma global.
- =conf-enabled=: Este directorio contiene enlaces simbólicos a los archivos de configuración del directorio =conf-available= que están activos.
#+reveal: split
- =mods-available=: Este directorio contiene los archivos de configuración de los módulos que se pueden utilizar para añadir nuevas funcionalidades al servidor.
- =mods-enabled=: Este directorio contiene enlaces simbólicos a los archivos de configuración del directorio =mod-available= que están activos.
#+reveal: split
- =sites-available=: Este directorio contiene los archivos de configuración de los hosts virtuales.
- =sites-enabled=: Este directorio contiene enlaces simbólicos a los archivos de configuración del directorio =sites-available= que están activos.



*** /VirtualHost/
- Apache puede comportarse como diferentes servidores, según el nombre de servidor que ve el cliente
  - Cabecera HTTP [[https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Host][Host]] ⇔ [[https://httpd.apache.org/docs/2.4/vhosts/name-based.html][=ServerName=]]
  - Hay [[https://httpd.apache.org/docs/2.4/vhosts/examples.html][otras formas]] de hacer /VirtualHosts/  
    

#+begin_src conf
<VirtualHost *:80>
    DocumentRoot /var/www/html
</VirtualHost>

<VirtualHost *:80>
    ServerName miservidor.local
    DocumentRoot /var/www/miservidor
</VirtualHost>
#+end_src

*** /Directory/
- Configura un directorio del disco (no del servidor web)
- Ejemplo que
  - Permite usar /links/ a ficheros
  - Permite configurar cada directorio con un fichero [[https://httpd.apache.org/docs/current/howto/htaccess.html][.htaccess]]
  - Permite cualquier usuario de Apache
- Nota: El proceso de Apache debe poder acceder a ese directorio    

#+begin_src conf
<Directory /var/www/miservidor>
   Options Indexes FollowSymLinks
   AllowOverride All
   Require all granted
</Directory>
#+end_src

*** CGI
- /Common Gateway Interface/
- Configuración: =serve-cgi-bin.conf=  
- Al recibir una petición:
  - Apache no devuelve el fichero, sino que lo ejecuta
  - El programa recibe como *entorno* información de la petición
  - El programa se encarga de generar la respuesta, incluidas las cabeceras

#+begin_src sh
#!/usr/bin/bash

echo "Content-type: text/plain"
echo
echo

echo $*
env
#+end_src

*** Ejercicio CGI
- Consigue que el programa anterior funcione en Apache
- Examina las variables recibidas y su relación con las [[https://en.wikipedia.org/wiki/List_of_HTTP_header_fields][cabeceras HTTP]] de /request/  


** MariaDB


#+begin_src sh
apt install mariadb-server
#+end_src

** PHP
#+begin_src bash
sudo apt install php
#+end_src

# https://httpd.apache.org/docs/trunk/es/howto/cgi.html

- La configuración de php está dividida según desde donde se use:
    - =/etc/php/7.4/cli=: Configuración de php para =php7.4-cli=, cuando se utiliza php desde la línea de comandos.
    - =/etc/php/7.4/apache2=: Configuración de php para apache2 cuando utiliza el módulo.
    - =/etc/php/7.4/mods-available=: Módulos disponibles de php que puedes estar configurados en cualquiera de los escenarios anteriores.
    - =/etc/php/7.4/apache2/conf.d=: Módulos instalados en esta configuración de php (enlaces simbólicos a =/etc/php/7.4/mods-available=).
    - =/etc/php/7.4/apache2/php.ini=: Configuración de php para este escenario.


** Interconexión entre componentes

#+begin_src sh
sudo apt install libapache2-mod-php php-mysql 
#+end_src

#+BEGIN_SRC dot :file ./media/tareas-en-la-practica.png :exports results :cmd dot :cmdline -T png
digraph {
  compound=true
  label=""
  node [shape="ellipse",margin=0];
  edge [dir="both"];
  rankdir=TD;


  "Navegador" -> "Apache" [label="HTTP/HTTPS"]
  "Apache" -> "Disco" [label="<Directory>\nPermisos linux"]
  "Apache" -> "PHP" [label="libapache2-mod-php"]
  "PHP" -> "MariaDB" [label="php-mysql"]
  "Apache" -> "Cualquier\nprograma" [label="mod_cgi"]
                
}

#+end_src

#+RESULTS:
[[file:./media/tareas-en-la-practica.png]]


* Cosas
- =tail -F=
- =PATH=
- =locate=
- =ssh=
- =tmux=, o más de una ventana
- =/etc/hosts=

  

* Lo que falta :noexport:

- Sistema gestor de bases de datos: instalación y configuración.
- Procesamiento de código: lenguajes de script en cliente y servidor.
- Módulos y componentes necesarios.
- Utilidades de prueba e instalación integrada (paquetes que incluyan el servidor web, el
lenguaje de script del servidor y el sistema gestor).
- Verificación del funcionamiento integrado.
- Documentación de la instala
